networks:
  proxy:
    name: proxy
    external: true
  backend:

services:
  backend:
    image: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.${ROUTER_NAME}.rule=Host(`${DOMAIN}`)'
      - 'traefik.http.routers.${ROUTER_NAME}.entrypoints=websecure'
      - 'traefik.http.routers.${ROUTER_NAME}.tls=true'

    environment:
      - NODE_ENV=development
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - AUTH0_ISSUER_URL=${AUTH0_ISSUER_URL}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - CORS_ORIGIN_LOCALHOST=${CORS_ORIGIN_LOCALHOST}
      - PUSH_SUBJECT=${PUSH_SUBJECT}
      - AUTH0_JWKS_URI=${AUTH0_JWKS_URI}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_MGMT_CLIENT_ID=${AUTH0_MGMT_CLIENT_ID}
      - AUTH0_MGMT_CLIENT_SECRET=${AUTH0_MGMT_CLIENT_SECRET}
      - BOT_TOKEN=${BOT_TOKEN}
      - BOT_LINK=${BOT_LINK}
      - CRON_TIME=${CRON_TIME}
      - LOGZIO_TOKEN=${LOGZIO_TOKEN}

    networks:
      - proxy
      - backend
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mysql:9.0.0
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1', '--silent']
      interval: 5s
      timeout: 3s
      retries: 2
      start_period: 0s
    restart: unless-stopped

volumes:
  db-data:
